openapi: 3.0.0
info:
  title: pizza-toppings
  version: 0.1.0

servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: Preferences
    description: User-submitted preferences.

paths:
  /user/preferences:
    get:
      summary: Get preferences
      description: |
        Retrieve current user's preferences.
      tags:
        - Preferences
      security:
        - basicAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  toppings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Topping'
                    description: List of preferred pizza toppings.
        '401':
          description: Unauthorized
        default:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: Update preferences
      description: |
        Update all preferences of the current user.
      tags:
        - Preferences
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                toppings:
                  type: array
                  items:
                    $ref: '#/components/schemas/Topping'
                  description: List of preferred pizza toppings.
                  default: []
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Bad Request
        default:
          $ref: '#/components/responses/ErrorResponse'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    Topping:
      type: string
      description: Case-insensitive topping name.
      example: pepperoni

  responses:
    ErrorResponse:
      description: Something went awfully wrong.
      content:
        application/json:
          schema:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
                example: 2023-04-15T12:30:45.990Z
              status:
                type: integer
                example: 500
              error:
                type: string
                example: Internal Server Error
              message:
                type: string
                example: Something went awfully wrong.
              path:
                type: string
                example: /v1/api/**
